{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-melody/source/melody-favicon.ico","path":"melody-favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/css/404.styl","path":"css/404.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/copy.js","path":"js/copy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/head.js","path":"js/head.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/fireworks.js","path":"js/fireworks.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/hexo-theme-melody.js","path":"js/hexo-theme-melody.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/katex.js","path":"js/katex.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/scroll.js","path":"js/scroll.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/transition.js","path":"js/transition.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/anime.min.js","path":"js/third-party/anime.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/jquery.fancybox.min.js","path":"js/third-party/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/jquery.min.js","path":"js/third-party/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/velocity.min.js","path":"js/third-party/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/velocity.ui.min.js","path":"js/third-party/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-melody/source/js/third-party/reveal/head.min.js","path":"js/third-party/reveal/head.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/compim.md","hash":"72e7c1e8d3d6f24e4e044d44a49427d87aeb1ebd","modified":1617374063237},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1617348752436},{"_id":"source/tags/index.md","hash":"4b87cae540b30ac530cbf354dbeec1d441fae798","modified":1617362138279},{"_id":"themes/hexo-theme-melody/scripts/hexo-plugins.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617360191926},{"_id":"themes/hexo-theme-melody/source/js/hexo-theme-melody.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617360191940},{"_id":"themes/hexo-theme-melody/layout/includes/gallery/script.pug","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617360191914},{"_id":"themes/hexo-theme-melody/.eslintignore","hash":"719a633358c168ec04b544a5a306fc454471f72f","modified":1617360191898},{"_id":"themes/hexo-theme-melody/.eslintrc","hash":"2c75ddb670b21591023b2c4f52ecfb02578b5eae","modified":1617360191898},{"_id":"themes/hexo-theme-melody/.gitignore","hash":"748e2ad992693d9d63a76c2772be5ffa36b86742","modified":1617360191900},{"_id":"themes/hexo-theme-melody/.npmignore","hash":"92a06c5d33648589b0a6333b13c9d94967f56ec2","modified":1617360191902},{"_id":"themes/hexo-theme-melody/.travis.demo.yml","hash":"977db46c56f95e0b475326ee7499890aa16bd971","modified":1617360191902},{"_id":"themes/hexo-theme-melody/CHANGELOG.md","hash":"0419f25e912921743e58ce38ef9ad4916aa617bd","modified":1617360191903},{"_id":"themes/hexo-theme-melody/FAQ.md","hash":"2e4871193be2bbade191c1064216072cbe61ab72","modified":1617360191903},{"_id":"themes/hexo-theme-melody/LICENSE","hash":"f6ad35196b942786fa91aedc1c0f45bf89de3fd3","modified":1617360191904},{"_id":"themes/hexo-theme-melody/README.md","hash":"243cb19e01121aa1af9e6d3b47cdb25b2be668be","modified":1617360191904},{"_id":"themes/hexo-theme-melody/_config.yml","hash":"850694e3312e1f303568b719f2437db666bb3385","modified":1617363508444},{"_id":"themes/hexo-theme-melody/package.json","hash":"6c36d69de89de1a1878d787b5af23772f89d4dc6","modified":1617360191925},{"_id":"themes/hexo-theme-melody/stylus_format.json","hash":"53008fbf66531953489ab0f2ce166576b7ba1ab7","modified":1617360191951},{"_id":"themes/hexo-theme-melody/.github/FUNDING.yml","hash":"e56cf70f2fc56e2433ac3bca379e2704a41c7889","modified":1617360191899},{"_id":"themes/hexo-theme-melody/.github/ISSUE_TEMPLATE.md","hash":"d1420092142acd3f38c31099934d84bf5c4a4b7c","modified":1617360191900},{"_id":"themes/hexo-theme-melody/.vscode/launch.json","hash":"52d28f3455d1e9ff1d7c56316773a77710e89751","modified":1617360191902},{"_id":"themes/hexo-theme-melody/.vscode/settings.json","hash":"defe04b1c276769d86dfb931c373595939729e92","modified":1617360191903},{"_id":"themes/hexo-theme-melody/languages/default.yml","hash":"4f87bdc1526111b59785f1dce1025435f7ed8e97","modified":1617360191905},{"_id":"themes/hexo-theme-melody/languages/en.yml","hash":"4f87bdc1526111b59785f1dce1025435f7ed8e97","modified":1617360191905},{"_id":"themes/hexo-theme-melody/languages/zh-Hans.yml","hash":"1868dda88a019692d1993d5ee6b1b854f1da9d88","modified":1617360191906},{"_id":"themes/hexo-theme-melody/layout/404.pug","hash":"0ad5d251ba70edad5c04a45d13ca6a8db3bf7b42","modified":1617360191906},{"_id":"themes/hexo-theme-melody/layout/archive.pug","hash":"f3198ed4d59ca9d0423060a428106a857247a8f8","modified":1617360191906},{"_id":"themes/hexo-theme-melody/layout/category.pug","hash":"27fe85787ee1e4bba75a6eadbf86f7ffc58cb66a","modified":1617360191907},{"_id":"themes/hexo-theme-melody/layout/gallery.pug","hash":"1470a86b329eb5c60d6fa6a7bafa25ddf1255f97","modified":1617360191907},{"_id":"themes/hexo-theme-melody/layout/index.pug","hash":"d15a36b5c8f1bec367888edb358e70b47eb15ea9","modified":1617360191922},{"_id":"themes/hexo-theme-melody/layout/page.pug","hash":"59ade962030ec41b86f7d754c53d974b8d4d2068","modified":1617360191923},{"_id":"themes/hexo-theme-melody/layout/post.pug","hash":"65a49aa42712f54af3b7ea9c73a22be39dc731c6","modified":1617360191923},{"_id":"themes/hexo-theme-melody/layout/slides.pug","hash":"1e84a92d5b854dd233e0b511d59c1cd7c8d647a1","modified":1617360191923},{"_id":"themes/hexo-theme-melody/layout/tag.pug","hash":"6b5c5c08e9a6773a4fce8583fdf614a784beb045","modified":1617360191925},{"_id":"themes/hexo-theme-melody/scripts/gallery-tag.js","hash":"b18e4a809de37da54ea914452ce4a24785fa7621","modified":1617360191925},{"_id":"themes/hexo-theme-melody/scripts/replace-config.js","hash":"76de82bb1b11725c9f13e25cf14742c81fe99bab","modified":1617360191927},{"_id":"themes/hexo-theme-melody/source/melody-favicon.ico","hash":"e33c804e570eb238fe095ed28346dd1b3a0666ae","modified":1617360191951},{"_id":"themes/hexo-theme-melody/.github/workflows/main.yml","hash":"d6b6afee00b38387cd308a0cba66db706adf5f0d","modified":1617360191900},{"_id":"themes/hexo-theme-melody/layout/includes/additional-js.pug","hash":"92c27adaf87d1108da8ba31c31ceae0e2083484c","modified":1617360191908},{"_id":"themes/hexo-theme-melody/layout/includes/config.pug","hash":"e1054fb05577c380fa5ef1ceaa76e06da2be4de0","modified":1617360191912},{"_id":"themes/hexo-theme-melody/layout/includes/footer.pug","hash":"c5968d30a668c3d1b8e658d784b661799d3ba48a","modified":1617360191913},{"_id":"themes/hexo-theme-melody/layout/includes/head.pug","hash":"d2ca3fc83e873e7d06440ad1f44fd42a5dd6d861","modified":1617360191914},{"_id":"themes/hexo-theme-melody/layout/includes/header.pug","hash":"5ddc31e487a0439cc910ecf530dfd7571abae40f","modified":1617360191916},{"_id":"themes/hexo-theme-melody/layout/includes/layout.pug","hash":"80e59c4023baa2504bff0e9a69efab3314f8ffdb","modified":1617360191916},{"_id":"themes/hexo-theme-melody/layout/includes/nav.pug","hash":"e1f5053a66a48b6fb6c4390ae55f5bd8e397ff8e","modified":1617360191917},{"_id":"themes/hexo-theme-melody/layout/includes/pagination.pug","hash":"11a7d975f7e44932ea509a1a9d29f3e1ddece73e","modified":1617360191917},{"_id":"themes/hexo-theme-melody/layout/includes/recent-posts.pug","hash":"f37dc3576cc45ad3da097b58f420b5b523d8a9a5","modified":1617360191917},{"_id":"themes/hexo-theme-melody/layout/includes/sidebar.pug","hash":"5fd5e002d0ab203489c840451e4fa9d3535610e2","modified":1617360191920},{"_id":"themes/hexo-theme-melody/source/css/404.styl","hash":"e16201381c7f064f1923a12a23136cec6db0a8a0","modified":1617360191927},{"_id":"themes/hexo-theme-melody/source/css/index.styl","hash":"c2823ad6013df237993eea5cf190c313270da4db","modified":1617360191937},{"_id":"themes/hexo-theme-melody/source/css/var.styl","hash":"bfce8a6dd838762e3db0b0052887220eb260dc7b","modified":1617360191938},{"_id":"themes/hexo-theme-melody/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1617360191938},{"_id":"themes/hexo-theme-melody/source/img/avatar.png","hash":"a44601fac9a81dd7e392d05ea5ddc65c96b051df","modified":1617360191939},{"_id":"themes/hexo-theme-melody/source/js/copy.js","hash":"a3a7c3158ea23a3bf63f7900750cc0928b73e25f","modified":1617360191939},{"_id":"themes/hexo-theme-melody/source/js/fancybox.js","hash":"91d2acc362c03d905b2d40bda42e08c0ae81c4f7","modified":1617360191939},{"_id":"themes/hexo-theme-melody/source/js/head.js","hash":"24bc79d4382730d79174cdc2cd3de6368dee8034","modified":1617360191940},{"_id":"themes/hexo-theme-melody/source/js/fireworks.js","hash":"915550eee287f3e0ff92929ac12df0567224cdd3","modified":1617360191940},{"_id":"themes/hexo-theme-melody/source/js/katex.js","hash":"8cc3bcbfd489f86714e815dc6ab8bad466c49664","modified":1617360191941},{"_id":"themes/hexo-theme-melody/source/js/scroll.js","hash":"3e02b196ca11d5ecfcc0f72fa31c11d28609db36","modified":1617360191941},{"_id":"themes/hexo-theme-melody/source/js/sidebar.js","hash":"6906dcca3a6b9bd46489ca378bc1e74e454168ac","modified":1617360191942},{"_id":"themes/hexo-theme-melody/source/js/transition.js","hash":"24db2b0ae93ea925fb18be6d466365a4cd9f6576","modified":1617360191950},{"_id":"themes/hexo-theme-melody/source/js/utils.js","hash":"5ff6609b1d674f7879f30e491bdd3c69139704da","modified":1617360191950},{"_id":"themes/hexo-theme-melody/layout/includes/404/404-nav.pug","hash":"f085a65214c2656ef6a104a2ae9fa1f8fbc196c1","modified":1617360191908},{"_id":"themes/hexo-theme-melody/layout/includes/404/layout.pug","hash":"24e9cee9d7c96712fffc404671d88f1d9c0a5a9b","modified":1617360191908},{"_id":"themes/hexo-theme-melody/layout/includes/comments/gitalk.pug","hash":"590bc5af43bc55182157dbac65e7cd8bf39f410d","modified":1617360191909},{"_id":"themes/hexo-theme-melody/layout/includes/comments/disqus.pug","hash":"0d753ace1190deebd9173279ab5369e4a30c53a8","modified":1617360191909},{"_id":"themes/hexo-theme-melody/layout/includes/comments/gitment.pug","hash":"97f524092775c9b7e618c691df40b4bce9e121ac","modified":1617360191909},{"_id":"themes/hexo-theme-melody/layout/includes/comments/index.pug","hash":"df445ab2a5f641da9294daf75c7d4178b4a08dad","modified":1617360191910},{"_id":"themes/hexo-theme-melody/layout/includes/comments/laibili.pug","hash":"1ffb80147fd443144ca6cf0230515f229eba6745","modified":1617360191910},{"_id":"themes/hexo-theme-melody/layout/includes/comments/valine.pug","hash":"2da47259101bfac47ebe93f87c034ab8f4ca9151","modified":1617360191910},{"_id":"themes/hexo-theme-melody/layout/includes/comments/vssue.pug","hash":"352be3c04f54e71a957a51fc28d20e7ac5579830","modified":1617360191911},{"_id":"themes/hexo-theme-melody/layout/includes/count/busuanzi.pug","hash":"760be9ea92e5eb6959f37b76b9c13fb627893b0a","modified":1617360191912},{"_id":"themes/hexo-theme-melody/layout/includes/gallery/layout.pug","hash":"8ff96c4f9afb416c5fc586c9585ae51cb6129529","modified":1617360191914},{"_id":"themes/hexo-theme-melody/layout/includes/mixins/article-sort.pug","hash":"05c080cbd236b7d94765350cc699b92736ca4609","modified":1617360191916},{"_id":"themes/hexo-theme-melody/layout/includes/mixins/slide.pug","hash":"cde884e97dd980bf05910934ce1d52ef3bd5df9c","modified":1617360191917},{"_id":"themes/hexo-theme-melody/layout/includes/search/algolia.pug","hash":"3d2b2de0e199ab1fb151f41f2bbaac909f3d3d12","modified":1617360191918},{"_id":"themes/hexo-theme-melody/layout/includes/search/index.pug","hash":"66b4f4e8119e987cd3f9907298689a1408a05859","modified":1617360191918},{"_id":"themes/hexo-theme-melody/layout/includes/search/local-search.pug","hash":"205aff585f7763b61b8597c6121e6d8c5f9329a4","modified":1617360191919},{"_id":"themes/hexo-theme-melody/layout/includes/share/add-this.pug","hash":"055d41a0cc135b8fb02da8faa1df5faacb8fc13d","modified":1617360191919},{"_id":"themes/hexo-theme-melody/layout/includes/share/share-js.pug","hash":"c1ab921b1874d0026a7e1c23833600e3ea158881","modified":1617360191920},{"_id":"themes/hexo-theme-melody/layout/includes/share/index.pug","hash":"42794c93723016ce1f23b81325e723a6f23f72d0","modified":1617360191919},{"_id":"themes/hexo-theme-melody/layout/includes/slide/layout.pug","hash":"e47bc2093e1f13c7070c02810ca6a87b7a6ee73e","modified":1617360191921},{"_id":"themes/hexo-theme-melody/layout/includes/slide/script.pug","hash":"36a326ad1c5224becd07d61a876d44af08c5d65f","modified":1617360191921},{"_id":"themes/hexo-theme-melody/layout/includes/third-party/canvas-ribbon.pug","hash":"a72c4b5943e9e88588983ab1c1cfeaf210142c56","modified":1617360191922},{"_id":"themes/hexo-theme-melody/layout/includes/third-party/katex.pug","hash":"19ffed43fa22c3bf1c8d974a8d33f73a9a67d098","modified":1617360191922},{"_id":"themes/hexo-theme-melody/layout/includes/third-party/mathjax.pug","hash":"0afc0e488ef64f5cb27b9fc90b13f0f9e9f958a5","modified":1617360191922},{"_id":"themes/hexo-theme-melody/source/css/_global/index.styl","hash":"a6ad6d2675e975883855a1fa3a634c7ba06d4685","modified":1617360191928},{"_id":"themes/hexo-theme-melody/source/css/_highlight/diff.styl","hash":"4e761f65c28f9df474fa2bd4d891c22db1aafa27","modified":1617360191928},{"_id":"themes/hexo-theme-melody/source/css/_highlight/highlight.styl","hash":"ca5913698ddd97a55adcc98097038e4190cd7b58","modified":1617360191929},{"_id":"themes/hexo-theme-melody/source/css/_highlight/theme.styl","hash":"89af8e4eb6adacee6693b3df46d87a0b1b2b0d2d","modified":1617360191930},{"_id":"themes/hexo-theme-melody/source/css/_layout/comments.styl","hash":"3b32040e894978ec9be6569f44fd5557734f2340","modified":1617360191930},{"_id":"themes/hexo-theme-melody/source/css/_layout/footer.styl","hash":"cb6db6151a49db6af0f7f6c8ee4c84872a75e437","modified":1617360191930},{"_id":"themes/hexo-theme-melody/source/css/_layout/page.styl","hash":"65420e8415cc117916c8b13f214d3a76815692dd","modified":1617360191932},{"_id":"themes/hexo-theme-melody/source/css/_layout/head.styl","hash":"41fe374cfa854be779b07d91f918836e8c03d54a","modified":1617360191930},{"_id":"themes/hexo-theme-melody/source/css/_layout/pagination.styl","hash":"ad5dc99b438588f92115592ed2d65a47c980720d","modified":1617360191933},{"_id":"themes/hexo-theme-melody/source/css/_layout/post.styl","hash":"f29f8fe1a5ef497eb898e927f8510c3293c654b3","modified":1617360191933},{"_id":"themes/hexo-theme-melody/source/css/_layout/sidebar.styl","hash":"29b02d3c319d84ab98dddec449f4bc83fbfdad36","modified":1617360191933},{"_id":"themes/hexo-theme-melody/source/css/_search/algolia.styl","hash":"0168c78d28fbc8996ad9e1764457a6526404515b","modified":1617360191935},{"_id":"themes/hexo-theme-melody/source/css/_search/index.styl","hash":"b16e4c15ad5844096f427eb3bdb49c5bb0bbcaf7","modified":1617360191935},{"_id":"themes/hexo-theme-melody/source/css/_search/local-search.styl","hash":"adb2663fcfee1c84461231472f228aa82c6478bd","modified":1617360191935},{"_id":"themes/hexo-theme-melody/source/css/_third-party/jquery.fancybox.min.css","hash":"f9c94ec04062a1bfe1ef894c49e6ec33fa121778","modified":1617360191937},{"_id":"themes/hexo-theme-melody/source/css/_third-party/normalize.min.css","hash":"e12eef6d6811c132f4f2fcf6c936be384191bcaf","modified":1617360191937},{"_id":"themes/hexo-theme-melody/source/js/search/algolia.js","hash":"8a6673cb1616b50a5ac8b2dc20fb3475bc32039f","modified":1617360191942},{"_id":"themes/hexo-theme-melody/source/js/search/local-search.js","hash":"a642a93fb52ebc87f05e5d3cee38618013fda539","modified":1617360191942},{"_id":"themes/hexo-theme-melody/source/js/third-party/anime.min.js","hash":"2ebe95b80a145ea5936bee692bcd44c9b5dbfa60","modified":1617360191944},{"_id":"themes/hexo-theme-melody/source/js/third-party/canvas-ribbon.js","hash":"48abc9e33d90de08a49d63e1bcd21defe0461309","modified":1617360191944},{"_id":"themes/hexo-theme-melody/source/js/third-party/jquery.fancybox.min.js","hash":"0acabccbb20d722141fa15b37d535807092b2c88","modified":1617360191946},{"_id":"themes/hexo-theme-melody/source/js/third-party/velocity.min.js","hash":"15a9dc404e02f2cd9b46cc71293b65671976567b","modified":1617360191949},{"_id":"themes/hexo-theme-melody/source/js/third-party/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1617360191949},{"_id":"themes/hexo-theme-melody/source/js/third-party/reveal/head.min.js","hash":"e34a3faf6e51034de612d15700e059fe82dba310","modified":1617360191948},{"_id":"themes/hexo-theme-melody/source/js/third-party/jquery.min.js","hash":"67bdacbd077ee59f411109fd119ee9f58db15a5f","modified":1617360191947},{"_id":"public/atom.xml","hash":"76c656e55330a0d06251bc1d8057c3b0c1370992","modified":1617374074581},{"_id":"public/sitemap.xml","hash":"ecf1d5bf3ac4640ccfffc917a57968af2ac60153","modified":1617374074581},{"_id":"public/tags/index.html","hash":"d74248b60382402852992ab4c6280435b5a43721","modified":1617374074581},{"_id":"public/2021/04/02/hello-world/index.html","hash":"3e354aa4ebc9fad26c374cfe29a1afae709a1534","modified":1617374074581},{"_id":"public/archives/index.html","hash":"30f075a29888a8fdbeea50e29dfab333192aae01","modified":1617374074581},{"_id":"public/archives/2021/index.html","hash":"421991aa52033beb26f35d355c18e51b92f9de00","modified":1617374074581},{"_id":"public/archives/2021/04/index.html","hash":"5c8c418db351c458c0a8fa2faaa3962bb244a5c7","modified":1617374074581},{"_id":"public/tags/Arduino/index.html","hash":"8a7d966afd0ec0657a2f6d323e5ceafa277ae394","modified":1617374074581},{"_id":"public/tags/Proteus/index.html","hash":"9e3195e55157cf3f12f80c0362fba9a9649749de","modified":1617374074581},{"_id":"public/2021/04/02/compim/index.html","hash":"34056df07e260704ff4efd452d744235a15f8278","modified":1617374074581},{"_id":"public/index.html","hash":"032f457c29c1b5745ec4dc2c972fa55b2c390d2c","modified":1617374074581},{"_id":"public/tags/Curriculum-Integration/index.html","hash":"2f0c3d299cacb59a4264464b7f6c51c06b15238e","modified":1617374074581},{"_id":"public/melody-favicon.ico","hash":"e33c804e570eb238fe095ed28346dd1b3a0666ae","modified":1617374074581},{"_id":"public/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1617374074581},{"_id":"public/img/avatar.png","hash":"a44601fac9a81dd7e392d05ea5ddc65c96b051df","modified":1617374074581},{"_id":"public/js/hexo-theme-melody.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617374074581},{"_id":"public/css/404.css","hash":"712ecbf4ac203ab5f1ea92989c0f0062a3d0aca9","modified":1617374074581},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617374074581},{"_id":"public/js/fancybox.js","hash":"2d3eaa654b2524c41dc5aba1d5e2e7cc9aaefd26","modified":1617374074581},{"_id":"public/js/copy.js","hash":"ce7f8601c7c75ced79e2e9851beec37299d49fd1","modified":1617374074581},{"_id":"public/js/head.js","hash":"555e9caa046d5a174af8d20c75e9e89c25aabb6c","modified":1617374074581},{"_id":"public/js/fireworks.js","hash":"4b6428da34535f0e8fe5a11976b8d89c48736500","modified":1617374074581},{"_id":"public/js/katex.js","hash":"a5a999b357c0fd9aeacae721bf121f30d40d6726","modified":1617374074581},{"_id":"public/js/scroll.js","hash":"fcc20d10c936d49c3f0cd2a97030ecaf64d213c8","modified":1617374074581},{"_id":"public/js/sidebar.js","hash":"a42109c5a69dedc87e1aaf8cb2383fd43069677e","modified":1617374074581},{"_id":"public/js/utils.js","hash":"f514662ad80803e1bb5f6bc653c4b9ad06ea4932","modified":1617374074581},{"_id":"public/js/transition.js","hash":"11c3b82a5e9ef2bf7bd712b6c211d86426f9a23e","modified":1617374074581},{"_id":"public/js/search/local-search.js","hash":"b7e77c27097d9d3ced13618912069d1ddf1cd64a","modified":1617374074581},{"_id":"public/js/search/algolia.js","hash":"8d2cc7ac4a015563344a3981c3040d308489935c","modified":1617374074581},{"_id":"public/js/third-party/canvas-ribbon.js","hash":"8fd084e962fb2028be9f748b5cb5f53d030d1d03","modified":1617374074581},{"_id":"public/js/third-party/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1617374074581},{"_id":"public/js/third-party/reveal/head.min.js","hash":"95c9de30444117adbbb3218070fda00af187a76a","modified":1617374074581},{"_id":"public/css/index.css","hash":"1b9ffaa1acbba5480139b625d4a5f02b0db2e33e","modified":1617374074581},{"_id":"public/js/third-party/anime.min.js","hash":"332031949d78a49e8a18611556253660574e47db","modified":1617374074581},{"_id":"public/js/third-party/velocity.min.js","hash":"69c85b9d6a931a7d3a5b0657e60112c31fb3b286","modified":1617374074581},{"_id":"public/js/third-party/jquery.fancybox.min.js","hash":"2ec3ef6c31b971ba5e58eb4a0c5ede902bbdd4af","modified":1617374074581},{"_id":"public/js/third-party/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1617374074581}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2021-04-02T11:11:28.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-04-02 19:11:28\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-04-02T11:15:38.279Z","path":"tags/index.html","comments":1,"_id":"ckn0erk4e0001g4l69irt9ayj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"How to connect COMPIM (Proteus) with Serial Monitor (Arduino IDE)","date":"2021-04-02T11:01:17.000Z","author":"Epiapoq","_content":"This is a tutorial about how to connect Proteus with Arduino IDE by serial port. Take BCD Adder for an instance.\n\n1/ Install [virtual serial port driver](https://www.eltima.com/vspd-post-download.html) for creating virtual serial port pair.\n\n![fig.1 VSPD](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223151989-592870050.png)\n\n![fig.2 Instrument Manager](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223204464-1400036519.png)\n\n2/ Pick \"COMPIM\" component in Proteus and setup baud rate and port number, so does \"VIRTUAL TERMINAL\".\n\n![fig.3 COMPIM](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223214302-1754038758.png)\n\n![fig.4 VIRTUAL TERMINAL](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223226537-1924063697.png)\n\n3/ Setup Serial Monitor in Arduino IDE.\n\n![fig.5 Serial Monitor](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223236398-435003762.png)\n\nNow run simulation in Proteus and input addend in Serial Monitor in Arduino IDE. The data will be transmitted and received by COM1/COM2.\n\n![fig.6 Result](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223244150-1360627946.gif)\n\n---\n\n<font color=888888>_Demo codes:_</font>\n\n```c++\n/*  \n    LAB2: Addends generator for FPGA BCD adder\n    Programming & Hardware By Epiapoq\n    Started 29-03-2021\n    Modified 30-03-2021\n    Version 1.0\n    Reference:\n    https://github.com/whatuptkhere/paralleloslam/blob/master/Paralleloslam.ino\n*/\n\nint firstByte = 0; // the first addend from serial port\nint secondByte = 0; // the second addend from serial port\nint sum = 0; // the sum\nint cb = 0; // check bit, which is used to check the number of the incomming addend\n\n/* each addend of BCD adder consists of only 4 bits, so here \njust define the lower nibble of the firstByte or secondByte */\nconst int firstByte_0 = 4; // LSB of first addend\nconst int firstByte_1 = 5;\nconst int firstByte_2 = 6;\nconst int firstByte_3 = 7; // MSB of first addend\nconst int secondByte_0 = 8; // LSB of second addend\nconst int secondByte_1 = 9;\nconst int secondByte_2 = 10;\nconst int secondByte_3 = 11; // MSB of second addend\n\nvoid setup() {\n    Serial.begin(9600); // open serial port, set data rate to 9600 bps\n    pinMode(firstByte_0, OUTPUT);\n    pinMode(firstByte_1, OUTPUT);\n    pinMode(firstByte_2, OUTPUT);\n    pinMode(firstByte_3, OUTPUT);\n    pinMode(secondByte_0, OUTPUT);\n    pinMode(secondByte_1, OUTPUT);\n    pinMode(secondByte_2, OUTPUT);\n    pinMode(secondByte_3, OUTPUT);\n}\n\nvoid loop() {\n    if (Serial.available() > 0 && (cb == 0)) { // read the first addend\n        firstByte = Serial.read() - 48;\n        \n        /* serial in from monitor and parallel out to FPGA */\n        digitalWrite(firstByte_0, firstByte & 0x01); // send LSB of first addend\n        digitalWrite(firstByte_1, firstByte & 0x02);\n        digitalWrite(firstByte_2, firstByte & 0x04);\n        digitalWrite(firstByte_3, firstByte & 0x08);\n        \n        Serial.print(firstByte);\n        Serial.print('+');\n        cb = 1;\n    }\n    else if ((Serial.available() > 0) && (cb == 1)) { // read the second addend\n        secondByte = Serial.read() - 48;\n\n        /* serial in from monitor and parallel out to FPGA */\n        digitalWrite(secondByte_0, secondByte & 0x01);\n        digitalWrite(secondByte_1, secondByte & 0x02);\n        digitalWrite(secondByte_2, secondByte & 0x04);\n        digitalWrite(secondByte_3, secondByte & 0x08);\n        \n        Serial.print(secondByte);\n        Serial.print('=');\n        sum = firstByte + secondByte;\n        Serial.print(sum); \n        Serial.println('\\n');\n        cb = 0;\n    }\n}\n```","source":"_posts/compim.md","raw":"---\ntitle: How to connect COMPIM (Proteus) with Serial Monitor (Arduino IDE) \ndate: 2021-04-02 19:01:17\nauthor: Epiapoq\ntags: \n    - Arduino\n    - Proteus\n    - Curriculum Integration \n---\nThis is a tutorial about how to connect Proteus with Arduino IDE by serial port. Take BCD Adder for an instance.\n\n1/ Install [virtual serial port driver](https://www.eltima.com/vspd-post-download.html) for creating virtual serial port pair.\n\n![fig.1 VSPD](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223151989-592870050.png)\n\n![fig.2 Instrument Manager](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223204464-1400036519.png)\n\n2/ Pick \"COMPIM\" component in Proteus and setup baud rate and port number, so does \"VIRTUAL TERMINAL\".\n\n![fig.3 COMPIM](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223214302-1754038758.png)\n\n![fig.4 VIRTUAL TERMINAL](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223226537-1924063697.png)\n\n3/ Setup Serial Monitor in Arduino IDE.\n\n![fig.5 Serial Monitor](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223236398-435003762.png)\n\nNow run simulation in Proteus and input addend in Serial Monitor in Arduino IDE. The data will be transmitted and received by COM1/COM2.\n\n![fig.6 Result](https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223244150-1360627946.gif)\n\n---\n\n<font color=888888>_Demo codes:_</font>\n\n```c++\n/*  \n    LAB2: Addends generator for FPGA BCD adder\n    Programming & Hardware By Epiapoq\n    Started 29-03-2021\n    Modified 30-03-2021\n    Version 1.0\n    Reference:\n    https://github.com/whatuptkhere/paralleloslam/blob/master/Paralleloslam.ino\n*/\n\nint firstByte = 0; // the first addend from serial port\nint secondByte = 0; // the second addend from serial port\nint sum = 0; // the sum\nint cb = 0; // check bit, which is used to check the number of the incomming addend\n\n/* each addend of BCD adder consists of only 4 bits, so here \njust define the lower nibble of the firstByte or secondByte */\nconst int firstByte_0 = 4; // LSB of first addend\nconst int firstByte_1 = 5;\nconst int firstByte_2 = 6;\nconst int firstByte_3 = 7; // MSB of first addend\nconst int secondByte_0 = 8; // LSB of second addend\nconst int secondByte_1 = 9;\nconst int secondByte_2 = 10;\nconst int secondByte_3 = 11; // MSB of second addend\n\nvoid setup() {\n    Serial.begin(9600); // open serial port, set data rate to 9600 bps\n    pinMode(firstByte_0, OUTPUT);\n    pinMode(firstByte_1, OUTPUT);\n    pinMode(firstByte_2, OUTPUT);\n    pinMode(firstByte_3, OUTPUT);\n    pinMode(secondByte_0, OUTPUT);\n    pinMode(secondByte_1, OUTPUT);\n    pinMode(secondByte_2, OUTPUT);\n    pinMode(secondByte_3, OUTPUT);\n}\n\nvoid loop() {\n    if (Serial.available() > 0 && (cb == 0)) { // read the first addend\n        firstByte = Serial.read() - 48;\n        \n        /* serial in from monitor and parallel out to FPGA */\n        digitalWrite(firstByte_0, firstByte & 0x01); // send LSB of first addend\n        digitalWrite(firstByte_1, firstByte & 0x02);\n        digitalWrite(firstByte_2, firstByte & 0x04);\n        digitalWrite(firstByte_3, firstByte & 0x08);\n        \n        Serial.print(firstByte);\n        Serial.print('+');\n        cb = 1;\n    }\n    else if ((Serial.available() > 0) && (cb == 1)) { // read the second addend\n        secondByte = Serial.read() - 48;\n\n        /* serial in from monitor and parallel out to FPGA */\n        digitalWrite(secondByte_0, secondByte & 0x01);\n        digitalWrite(secondByte_1, secondByte & 0x02);\n        digitalWrite(secondByte_2, secondByte & 0x04);\n        digitalWrite(secondByte_3, secondByte & 0x08);\n        \n        Serial.print(secondByte);\n        Serial.print('=');\n        sum = firstByte + secondByte;\n        Serial.print(sum); \n        Serial.println('\\n');\n        cb = 0;\n    }\n}\n```","slug":"compim","published":1,"updated":"2021-04-02T14:34:23.237Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn0erk460000g4l6d4sb8edz","content":"<p>This is a tutorial about how to connect Proteus with Arduino IDE by serial port. Take BCD Adder for an instance.</p>\n<p>1/ Install <a href=\"https://www.eltima.com/vspd-post-download.html\">virtual serial port driver</a> for creating virtual serial port pair.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223151989-592870050.png\" alt=\"fig.1 VSPD\"></p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223204464-1400036519.png\" alt=\"fig.2 Instrument Manager\"></p>\n<p>2/ Pick “COMPIM” component in Proteus and setup baud rate and port number, so does “VIRTUAL TERMINAL”.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223214302-1754038758.png\" alt=\"fig.3 COMPIM\"></p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223226537-1924063697.png\" alt=\"fig.4 VIRTUAL TERMINAL\"></p>\n<p>3/ Setup Serial Monitor in Arduino IDE.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223236398-435003762.png\" alt=\"fig.5 Serial Monitor\"></p>\n<p>Now run simulation in Proteus and input addend in Serial Monitor in Arduino IDE. The data will be transmitted and received by COM1/COM2.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223244150-1360627946.gif\" alt=\"fig.6 Result\"></p>\n<hr>\n<p><font color=888888><em>Demo codes:</em></font></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  </span></span><br><span class=\"line\"><span class=\"comment\">    LAB2: Addends generator for FPGA BCD adder</span></span><br><span class=\"line\"><span class=\"comment\">    Programming &amp; Hardware By Epiapoq</span></span><br><span class=\"line\"><span class=\"comment\">    Started 29-03-2021</span></span><br><span class=\"line\"><span class=\"comment\">    Modified 30-03-2021</span></span><br><span class=\"line\"><span class=\"comment\">    Version 1.0</span></span><br><span class=\"line\"><span class=\"comment\">    Reference:</span></span><br><span class=\"line\"><span class=\"comment\">    https://github.com/whatuptkhere/paralleloslam/blob/master/Paralleloslam.ino</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> firstByte = <span class=\"number\">0</span>; <span class=\"comment\">// the first addend from serial port</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> secondByte = <span class=\"number\">0</span>; <span class=\"comment\">// the second addend from serial port</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">// the sum</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> cb = <span class=\"number\">0</span>; <span class=\"comment\">// check bit, which is used to check the number of the incomming addend</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* each addend of BCD adder consists of only 4 bits, so here </span></span><br><span class=\"line\"><span class=\"comment\">just define the lower nibble of the firstByte or secondByte */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_0 = <span class=\"number\">4</span>; <span class=\"comment\">// LSB of first addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_1 = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_2 = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_3 = <span class=\"number\">7</span>; <span class=\"comment\">// MSB of first addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_0 = <span class=\"number\">8</span>; <span class=\"comment\">// LSB of second addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_1 = <span class=\"number\">9</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_3 = <span class=\"number\">11</span>; <span class=\"comment\">// MSB of second addend</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Serial.<span class=\"built_in\">begin</span>(<span class=\"number\">9600</span>); <span class=\"comment\">// open serial port, set data rate to 9600 bps</span></span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_0, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_1, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_2, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_3, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_0, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_1, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_2, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_3, OUTPUT);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Serial.<span class=\"built_in\">available</span>() &gt; <span class=\"number\">0</span> &amp;&amp; (cb == <span class=\"number\">0</span>)) &#123; <span class=\"comment\">// read the first addend</span></span><br><span class=\"line\">        firstByte = Serial.<span class=\"built_in\">read</span>() - <span class=\"number\">48</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">/* serial in from monitor and parallel out to FPGA */</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_0, firstByte &amp; <span class=\"number\">0x01</span>); <span class=\"comment\">// send LSB of first addend</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_1, firstByte &amp; <span class=\"number\">0x02</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_2, firstByte &amp; <span class=\"number\">0x04</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_3, firstByte &amp; <span class=\"number\">0x08</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(firstByte);</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;+&#x27;</span>);</span><br><span class=\"line\">        cb = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((Serial.<span class=\"built_in\">available</span>() &gt; <span class=\"number\">0</span>) &amp;&amp; (cb == <span class=\"number\">1</span>)) &#123; <span class=\"comment\">// read the second addend</span></span><br><span class=\"line\">        secondByte = Serial.<span class=\"built_in\">read</span>() - <span class=\"number\">48</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* serial in from monitor and parallel out to FPGA */</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_0, secondByte &amp; <span class=\"number\">0x01</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_1, secondByte &amp; <span class=\"number\">0x02</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_2, secondByte &amp; <span class=\"number\">0x04</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_3, secondByte &amp; <span class=\"number\">0x08</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(secondByte);</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">        sum = firstByte + secondByte;</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(sum); </span><br><span class=\"line\">        Serial.<span class=\"built_in\">println</span>(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        cb = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>This is a tutorial about how to connect Proteus with Arduino IDE by serial port. Take BCD Adder for an instance.</p>\n<p>1/ Install <a href=\"https://www.eltima.com/vspd-post-download.html\">virtual serial port driver</a> for creating virtual serial port pair.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223151989-592870050.png\" alt=\"fig.1 VSPD\"></p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223204464-1400036519.png\" alt=\"fig.2 Instrument Manager\"></p>\n<p>2/ Pick “COMPIM” component in Proteus and setup baud rate and port number, so does “VIRTUAL TERMINAL”.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223214302-1754038758.png\" alt=\"fig.3 COMPIM\"></p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223226537-1924063697.png\" alt=\"fig.4 VIRTUAL TERMINAL\"></p>\n<p>3/ Setup Serial Monitor in Arduino IDE.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223236398-435003762.png\" alt=\"fig.5 Serial Monitor\"></p>\n<p>Now run simulation in Proteus and input addend in Serial Monitor in Arduino IDE. The data will be transmitted and received by COM1/COM2.</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/2305487/202104/2305487-20210402223244150-1360627946.gif\" alt=\"fig.6 Result\"></p>\n<hr>\n<p><font color=888888><em>Demo codes:</em></font></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  </span></span><br><span class=\"line\"><span class=\"comment\">    LAB2: Addends generator for FPGA BCD adder</span></span><br><span class=\"line\"><span class=\"comment\">    Programming &amp; Hardware By Epiapoq</span></span><br><span class=\"line\"><span class=\"comment\">    Started 29-03-2021</span></span><br><span class=\"line\"><span class=\"comment\">    Modified 30-03-2021</span></span><br><span class=\"line\"><span class=\"comment\">    Version 1.0</span></span><br><span class=\"line\"><span class=\"comment\">    Reference:</span></span><br><span class=\"line\"><span class=\"comment\">    https://github.com/whatuptkhere/paralleloslam/blob/master/Paralleloslam.ino</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> firstByte = <span class=\"number\">0</span>; <span class=\"comment\">// the first addend from serial port</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> secondByte = <span class=\"number\">0</span>; <span class=\"comment\">// the second addend from serial port</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>; <span class=\"comment\">// the sum</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> cb = <span class=\"number\">0</span>; <span class=\"comment\">// check bit, which is used to check the number of the incomming addend</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* each addend of BCD adder consists of only 4 bits, so here </span></span><br><span class=\"line\"><span class=\"comment\">just define the lower nibble of the firstByte or secondByte */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_0 = <span class=\"number\">4</span>; <span class=\"comment\">// LSB of first addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_1 = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_2 = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> firstByte_3 = <span class=\"number\">7</span>; <span class=\"comment\">// MSB of first addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_0 = <span class=\"number\">8</span>; <span class=\"comment\">// LSB of second addend</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_1 = <span class=\"number\">9</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_2 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> secondByte_3 = <span class=\"number\">11</span>; <span class=\"comment\">// MSB of second addend</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Serial.<span class=\"built_in\">begin</span>(<span class=\"number\">9600</span>); <span class=\"comment\">// open serial port, set data rate to 9600 bps</span></span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_0, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_1, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_2, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(firstByte_3, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_0, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_1, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_2, OUTPUT);</span><br><span class=\"line\">    <span class=\"built_in\">pinMode</span>(secondByte_3, OUTPUT);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Serial.<span class=\"built_in\">available</span>() &gt; <span class=\"number\">0</span> &amp;&amp; (cb == <span class=\"number\">0</span>)) &#123; <span class=\"comment\">// read the first addend</span></span><br><span class=\"line\">        firstByte = Serial.<span class=\"built_in\">read</span>() - <span class=\"number\">48</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">/* serial in from monitor and parallel out to FPGA */</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_0, firstByte &amp; <span class=\"number\">0x01</span>); <span class=\"comment\">// send LSB of first addend</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_1, firstByte &amp; <span class=\"number\">0x02</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_2, firstByte &amp; <span class=\"number\">0x04</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(firstByte_3, firstByte &amp; <span class=\"number\">0x08</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(firstByte);</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;+&#x27;</span>);</span><br><span class=\"line\">        cb = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((Serial.<span class=\"built_in\">available</span>() &gt; <span class=\"number\">0</span>) &amp;&amp; (cb == <span class=\"number\">1</span>)) &#123; <span class=\"comment\">// read the second addend</span></span><br><span class=\"line\">        secondByte = Serial.<span class=\"built_in\">read</span>() - <span class=\"number\">48</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* serial in from monitor and parallel out to FPGA */</span></span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_0, secondByte &amp; <span class=\"number\">0x01</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_1, secondByte &amp; <span class=\"number\">0x02</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_2, secondByte &amp; <span class=\"number\">0x04</span>);</span><br><span class=\"line\">        <span class=\"built_in\">digitalWrite</span>(secondByte_3, secondByte &amp; <span class=\"number\">0x08</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(secondByte);</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">        sum = firstByte + secondByte;</span><br><span class=\"line\">        Serial.<span class=\"built_in\">print</span>(sum); </span><br><span class=\"line\">        Serial.<span class=\"built_in\">println</span>(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        cb = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-04-02T07:32:32.436Z","updated":"2021-04-02T07:32:32.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn0erk4g0002g4l69hct061c","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckn0erk460000g4l6d4sb8edz","tag_id":"ckn0erk4i0003g4l645f4fhhv","_id":"ckn0erk4n0006g4l6df196el5"},{"post_id":"ckn0erk460000g4l6d4sb8edz","tag_id":"ckn0erk4l0004g4l65l9ib58v","_id":"ckn0erk4n0007g4l6cslt8ku4"},{"post_id":"ckn0erk460000g4l6d4sb8edz","tag_id":"ckn0erk4m0005g4l6cyx6e2tp","_id":"ckn0erk4n0008g4l60s802bei"}],"Tag":[{"name":"Arduino","_id":"ckn0erk4i0003g4l645f4fhhv"},{"name":"Proteus","_id":"ckn0erk4l0004g4l65l9ib58v"},{"name":"Curriculum Integration","_id":"ckn0erk4m0005g4l6cyx6e2tp"}]}}